# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.utilities.file_wrapper import FileWrapper
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from mergedapi.models.file_service_res import FileServiceRes
from mergedapi.exceptions.error_response_error_1_exception import ErrorResponseError1Exception


class FilesController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(FilesController, self).__init__(config)

    def service_upload_file_payload(self,
                                    account_name,
                                    service_name,
                                    version,
                                    category_type,
                                    category_name,
                                    payload,
                                    correlation_id=None,
                                    category_version=None):
        """Does a POST request to /v1/files/{serviceName}/{version}/uploadAndValidate.

        Upload workload payload/package in the MEC platform

        Args:
            account_name (string): User account name.
            service_name (string): ServiceName to which the file is going to
                be associated.
            version (string): Version of the service being used.
            category_type (CategoryTypeEnum): Type of the file being
                uploaded.
            category_name (string): workloadName used in the service while
                creation.
            payload (typing.BinaryIO): payload/file which is to be uploaded
                should be provided in formData.
            correlation_id (string, optional): TODO: type description here.
            category_version (string, optional): It is mandatory for only
                Service file, not mandatory for Workload & Workflow file

        Returns:
            FileServiceRes: Response from the API. Upload success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT2)
            .path('/v1/files/{serviceName}/{version}/uploadAndValidate')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('AccountName')
                          .value(account_name))
            .template_param(Parameter()
                            .key('serviceName')
                            .value(service_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('version')
                            .value(version)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('categoryType')
                         .value(category_type))
            .query_param(Parameter()
                         .key('categoryName')
                         .value(category_name))
            .multipart_param(Parameter()
                             .key('payload')
                             .value(payload)
                             .default_content_type('application/octet-stream'))
            .header_param(Parameter()
                          .key('correlationId')
                          .value(correlation_id))
            .query_param(Parameter()
                         .key('categoryVersion')
                         .value(category_version))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(FileServiceRes.from_dictionary)
            .local_error('400', 'Bad Request', ErrorResponseError1Exception)
            .local_error('401', 'Unauthorized', ErrorResponseError1Exception)
            .local_error('404', 'Not found', ErrorResponseError1Exception)
            .local_error('500', 'Internal Server Error', ErrorResponseError1Exception)
        ).execute()
