# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from mergedapi.models.target_response import TargetResponse
from mergedapi.models.generate_an_external_id_response import GenerateAnExternalIDResponse


class TargetsController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(TargetsController, self).__init__(config)

    def query_a_target(self,
                       body):
        """Does a POST request to /targets/actions/query.

        Search for targets by property values. Returns an array of all
        matching target resources.

        Args:
            body (QueryATargetRequest): Search for targets by property
                values.

        Returns:
            list of TargetResponse: Response from the API. A success response
                includes an array of all matching targets. Each target
                includes the full target resource definition.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT3)
            .path('/targets/actions/query')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(TargetResponse.from_dictionary)
        ).execute()

    def delete_a_target(self,
                        body):
        """Does a POST request to /targets/actions/delete.

        Remove a target from a ThingSpace account.

        Args:
            body (DeleteATargetRequest): The request body identifies the
                target to delete.

        Returns:
            void: Response from the API. Target deleted successfully.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT3)
            .path('/targets/actions/delete')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).execute()

    def create_a_target(self,
                        body):
        """Does a POST request to /targets.

        Define a target to receive data streams, alerts, or callbacks. After
        creating the target resource, use its ID in a subscription to set up a
        data stream.

        Args:
            body (CreateATargetRequest): The request body provides the details
                of the target that you want to create.

        Returns:
            TargetResponse: Response from the API. A success response includes
                the full target resource definition.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT3)
            .path('/targets')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(TargetResponse.from_dictionary)
        ).execute()

    def generateanexternal_id(self,
                              body):
        """Does a POST request to /targets/actions/newextid.

        Create a unique string that ThingSpace will pass to AWS for increased
        security

        Args:
            body (GenerateanexternalIDRequest): The request body only contains
                the authenticating account.

        Returns:
            GenerateAnExternalIDResponse: Response from the API. Returns a new
                external ID.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT3)
            .path('/targets/actions/newextid')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GenerateAnExternalIDResponse.from_dictionary)
        ).execute()
