# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from mergedapi.models.csp_profile_res_list import CspProfileResList
from mergedapi.models.cspprofile import Cspprofile
from mergedapi.models.delete_response import DeleteResponse
from mergedapi.exceptions.error_response_error_1_exception import ErrorResponseError1Exception


class CSPProfileController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(CSPProfileController, self).__init__(config)

    def fetch_cloud_credential_details(self,
                                       account_name,
                                       correlation_id=None,
                                       q=None,
                                       limit=None,
                                       off_set=None):
        """Does a GET request to /v1/cspProfiles/.

        Fetch available cloud credentials with in user's organization

        Args:
            account_name (string): User account name.
            correlation_id (string, optional): TODO: type description here.
            q (string, optional): Use the coloumn (:) character to separate
                multiple query params eg
                type=AWS:awsCspProfile.credType=ACCESS_KEY,ROLE_ARN:state=UNVER
                IFIED,VERIFIED
            limit (long|int, optional): number of items to return
            off_set (long|int, optional): Id of the last respose value in the
                previous list

        Returns:
            CspProfileResList: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT2)
            .path('/v1/cspProfiles/')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('AccountName')
                          .value(account_name))
            .header_param(Parameter()
                          .key('correlationId')
                          .value(correlation_id))
            .query_param(Parameter()
                         .key('q')
                         .value(q))
            .query_param(Parameter()
                         .key('limit')
                         .value(limit))
            .query_param(Parameter()
                         .key('offSet')
                         .value(off_set))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CspProfileResList.from_dictionary)
            .local_error('401', 'Unauthorized', ErrorResponseError1Exception)
            .local_error('403', 'Forbidden', ErrorResponseError1Exception)
            .local_error('404', 'Not found', ErrorResponseError1Exception)
            .local_error('429', 'Too many requests', ErrorResponseError1Exception)
            .local_error('500', 'Internal Server Error', ErrorResponseError1Exception)
        ).execute()

    def create_cloud_credential(self,
                                account_name,
                                body,
                                correlation_id=None):
        """Does a POST request to /v1/cspProfiles/.

        Create a new cloud credential with in user's organization

        Args:
            account_name (string): User account name.
            body (Cspprofile): body
            correlation_id (string, optional): TODO: type description here.

        Returns:
            Cspprofile: Response from the API. Created

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT2)
            .path('/v1/cspProfiles/')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('AccountName')
                          .value(account_name))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('correlationId')
                          .value(correlation_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Cspprofile.from_dictionary)
            .local_error('400', 'Bad Request', ErrorResponseError1Exception)
            .local_error('401', 'Unauthorized', ErrorResponseError1Exception)
            .local_error('403', 'Forbidden', ErrorResponseError1Exception)
            .local_error('429', 'too many requests', ErrorResponseError1Exception)
            .local_error('500', 'Internal Server Error', ErrorResponseError1Exception)
        ).execute()

    def remove_cloud_credential(self,
                                account_name,
                                id,
                                correlation_id=None):
        """Does a DELETE request to /v1/cspProfiles/{id}.

        Remove a cloud credential from user's organization

        Args:
            account_name (string): User account name.
            id (string): Csp Profile Id
            correlation_id (string, optional): TODO: type description here.

        Returns:
            DeleteResponse: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT2)
            .path('/v1/cspProfiles/{id}')
            .http_method(HttpMethodEnum.DELETE)
            .header_param(Parameter()
                          .key('AccountName')
                          .value(account_name))
            .template_param(Parameter()
                            .key('id')
                            .value(id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('correlationId')
                          .value(correlation_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(DeleteResponse.from_dictionary)
            .local_error('401', 'Unauthorized', ErrorResponseError1Exception)
            .local_error('404', 'Not found', ErrorResponseError1Exception)
            .local_error('500', 'Internal Server Error', ErrorResponseError1Exception)
        ).execute()
