# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.firmware_upgrade_query_response import FirmwareUpgradeQueryResponse


class UpgradeListQueryResponse(object):

    """Implementation of the 'UpgradeListQueryResponse' model.

    Upgrade information

    Attributes:
        has_more_flag (bool): True if there are more devices to retrieve.
        last_seen_upgrade_id (int): If hasMoreData=true, the startIndex to use
            for the next request. 0 if hasMoreData=false.
        report_list (list of FirmwareUpgradeQueryResponse): Array of upgrade
            objects with the specified status.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "has_more_flag": 'hasMoreFlag',
        "last_seen_upgrade_id": 'lastSeenUpgradeId',
        "report_list": 'reportList'
    }

    _optionals = [
        'has_more_flag',
        'last_seen_upgrade_id',
        'report_list',
    ]

    def __init__(self,
                 has_more_flag=APIHelper.SKIP,
                 last_seen_upgrade_id=APIHelper.SKIP,
                 report_list=APIHelper.SKIP):
        """Constructor for the UpgradeListQueryResponse class"""

        # Initialize members of the class
        if has_more_flag is not APIHelper.SKIP:
            self.has_more_flag = has_more_flag 
        if last_seen_upgrade_id is not APIHelper.SKIP:
            self.last_seen_upgrade_id = last_seen_upgrade_id 
        if report_list is not APIHelper.SKIP:
            self.report_list = report_list 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        has_more_flag = dictionary.get("hasMoreFlag") if "hasMoreFlag" in dictionary.keys() else APIHelper.SKIP
        last_seen_upgrade_id = dictionary.get("lastSeenUpgradeId") if dictionary.get("lastSeenUpgradeId") else APIHelper.SKIP
        report_list = None
        if dictionary.get('reportList') is not None:
            report_list = [FirmwareUpgradeQueryResponse.from_dictionary(x) for x in dictionary.get('reportList')]
        else:
            report_list = APIHelper.SKIP
        # Return an object of this model
        return cls(has_more_flag,
                   last_seen_upgrade_id,
                   report_list)
