# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mergedapi.api_helper import APIHelper
from mergedapi.models.query_a_target_request import QueryATargetRequest
from mergedapi.models.delete_a_target_request import DeleteATargetRequest
from mergedapi.models.create_a_target_request import CreateATargetRequest
from mergedapi.models.generateanexternal_id_request import GenerateanexternalIDRequest


class TargetsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(TargetsControllerTests, cls).setUpClass()
        cls.controller = cls.client.targets
        cls.response_catcher = cls.controller.http_call_back

    # Search for targets by property values. Returns an array of all matching target resources.
    def test_query_a_target(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"accountidentifier":{"billingaccountid":"1223334444-00001"},"reso'
            'urceidentifier":{"id":"dd1682d3-2d80-cefc-f3ee-25154800beff"}}', QueryATargetRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.query_a_target(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"address":"https://myhost.com:1825","addressscheme":"streamrest"'
            ',"createdon":"2018-12-22T03:59:18.563Z","id":"cee10900-f54e-6eef-e'
            '455-bd7f15c4be32","kind":"ts.target","lastupdated":"2018-12-22T03:'
            '59:18.563Z","name":"host:port target","version":"1.0","versionid":'
            '"f4be7c2b-059d-11e9-bec6-02420a4e1b0a"},{"address":"arn:aws:iam::2'
            '52156542789:role/ThingSpace","addressscheme":"streamawsiot","creat'
            'edon":"2019-01-24T19:06:43.577Z","externalid":"lJZnih8BfqsosZrEEkf'
            'PuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==","id":"cea17'
            '0cc-a58f-6531-fc4b-fae1ceb1a6c8","kind":"ts.target","lastupdated":'
            '"2019-01-24T19:32:31.841Z","name":"AWS Target","region":"us-east-1'
            '","version":"1.0","versionid":"caf85ff7-200e-11e9-a85b-02420a621e0'
            'a"}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Remove a target from a ThingSpace account.
    def test_delete_a_target(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"accountidentifier":{"billingaccountid":"0000000000-00001"},"reso'
            'urceidentifier":{"id":"2e61a17d-8fd1-6816-e995-e4c2528bf535"}}', DeleteATargetRequest.from_dictionary)

        # Perform the API call through the SDK function
        self.controller.delete_a_target(body)

        # Test response code
        assert self.response_catcher.response.status_code == 204

    # Define a target to receive data streams, alerts, or callbacks. After creating the target resource, use its ID in a subscription to set up a data stream.
    def test_create_a_target(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"accountidentifier":{"billingaccountid":"0000000000-00001"},"bill'
            'ingaccountid":"0000000000-00001","kind":"ts.target","address":"htt'
            'ps://your_IoT_Central_Application.azureiotcentral.com","addresssch'
            'eme":"streamazureiot","fields":{"httpheaders":{"Authorization":"Sh'
            'aredAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF'
            '5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=16'
            '48827260410"},"devicetypes":["cHeAssetTracker","cHeAssetTrackerV2"'
            ',"tgAssetTracker","tgAssetTrackerV2"]}}', CreateATargetRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.create_a_target(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"address":"arn:aws:iam::252156542978:role/ThingSpace","addresssch'
            'eme":"streamawsiot","billingaccountid":"1223334444-00001","created'
            'on":"2018-12-21T04:37:42.651Z","externalid":"lJZnih8BfqsosZrEEkfPu'
            'R3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==","id":"0e41123'
            '0-c3eb-64dc-f5f4-1020364aa81f","kind":"ts.target","lastupdated":"2'
            '018-12-21T04:37:42.651Z","name":"AWS Target","region":"us-east-1",'
            '"version":"1.0","versionid":"27aca5a4-04da-11e9-bff3-02420a5e1b0b"'
            '}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Create a unique string that ThingSpace will pass to AWS for increased security
    def test_generateanexternal_id(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"accountidentifier":{"billingaccountid":"0000000000-00001"}}', GenerateanexternalIDRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.generateanexternal_id(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"externalid":"ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQ'
            'B9EbzpTRep8J7RmV7QH=="}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

